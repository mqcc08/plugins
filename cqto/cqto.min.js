
var timeOut = 30;
(function ($) {
    var s  = ['450px','550px'];
    var m  = ['800px','750px'];
    var l  = ['1000px','750px'];

    $.sequenceId = function () {
        var myDate = new Date();
        var ymdhms =  myDate.getFullYear() +""+
            (myDate.getMonth()+1) +""+
            myDate.getDate() +""+
            myDate.getHours() +""+
            myDate.getMinutes() +""+
            myDate.getSeconds()+""+ Math.random().toString().slice(-6);
        return ymdhms;
    };
    $.loading = function(){
        var index = layer.msg('数据加载中...', {
            icon: 16,
            shade: 0.5,
            time: (1000 * timeOut)
        });
        return index;
    },
        $.unloading = function(index){
            layer.close(index);
        },
        $.openIframe = function(title , content , size , func){
            var def_size = m;
            if (size == 's'){
                def_size = s;
            }
            if (size == 'l'){
                def_size = l;
            }
            return $.openDialogDefault(2 , title , content , def_size , func);
        },
        $.openDialog = function(title , content , size , func){
            var def_size = m;
            if (size == 's'){
                def_size = s;
            }
            if (size == 'l'){
                def_size = l;
            }
            return $.openDialogDefault(1 , title , content , def_size , func);
        }

    $.openDialogDefault = function(type , title , content , def_size , func){
        var $layer = layer;
        if (2 == type ){
            $layer = top.layer;
        }
        return $layer.open({
            type: type
            ,title: title //不显示标题栏
            ,shadeClose: false
            ,shade: false
            ,maxmin: true
            ,area: def_size
            ,shade: 0.2
            ,id: $.sequenceId() //设定一个id，防止重复弹出
            ,resize: true
            ,btn: ['确认', '关闭']
            ,btnAlign: 'c'
            ,moveType: 1 //拖拽模式，0或者1
            ,content: content
            ,yes: function(index , layero){
                console.log(index)
                console.log(layero)
                func(index , layero);
            }
            ,cancel:function (index,layero) {
                if (1 == type){
                    content.css("display","none");
                }
                layer.close(index);

            }
        });
    },
        $.fn.globalSerializeObject = function(){
            var parms = {};
            var serializeArray = $(this).serializeArray();
            $.each(serializeArray , function (i , obj) {
                parms[obj.name] = obj.value;
            })
            return  parms;
        },
        $.fn.globalResetForm = function(){
            $.each($(this).find("input") , function (index , object) {
                $(object).val("");
            })
        },
        $.fn.extend({


        });
})(jQuery);

var cqto = Object();
cqto.success = function () {
    top.toastr.success(msg, "提示",{
        progressBar: !0,
        showMethod: "slideDown",
        hideMethod: "slideUp",
        timeOut: 3000
    });
},
cqto.error = function (msg) {
    top.toastr.error(msg, "提示",{
        progressBar: !0,
        showMethod: "slideDown",
        hideMethod: "slideUp",
        timeOut: 3000
    });
}
cqto.info = function (msg) {
    top.toastr.info(msg, "提示",{
        progressBar: !0,
        showMethod: "slideDown",
        hideMethod: "slideUp",
        timeOut: 3000
    });
}
cqto.warning = function (msg) {
    top.toastr.warning(msg, "提示",{
        progressBar: !0,
        showMethod: "slideDown",
        hideMethod: "slideUp",
        timeOut: 3000
    });
}



var httpClient = Object();
var returnJson = "{\"msg\":\"请求超时!\",\"code\":100,\"systemTime\":\""+new Date()+"\",\"status\":100}";
/**
 *
 * @param url
 * @param params
 * @returns {*}
 */
httpClient.post = function (url, params , func) {
    var result = null ;
    $.ajax({
        url: url,
        data: params ,
        timeout : (1000 * timeOut), //超时时间设置，单位毫秒
        type:"POST",
        beforeSend:function(){
            //index = hpc.load();
        },
        complete: function (XMLHttpRequest,status) {
            if(status=='timeout'){//超时,status还有success,error等值的情况
                result =  func(JSON.parse(returnJson));
            }
        },
        success:function(data) {
            result =  func(data);
        }
    });
    return result;
},
/**
 *
 * @param url
 * @param params
 * @param func
 * @returns {*}
 */
httpClient.put = function (url, params , func) {
    var result = null ;
    $.ajax({
        url: url,
        data: params ,
        type:"PUT",
        beforeSend:function(){
            //index = hpc.load();
        },
        complete: function (XMLHttpRequest,status) {
            if(status=='timeout'){//超时,status还有success,error等值的情况
                result =  func(JSON.parse(returnJson));
            }
        },
        success:function(data) {
            //result = data;
            result = func(data);

        },
        error:function (data) {
            result = func(data);
        }
    });
    return result;
},
/**
 *
 * @param url
 * @param params
 * @returns {*}
 */
httpClient.get = function (url, params , func) {
    var result = null ;
    $.ajax({
        url: url,
        data: params ,
        type:"GET",
        beforeSend:function(){
            //index = hpc.load();
        },
        complete: function (XMLHttpRequest,status) {
            if(status=='timeout'){//超时,status还有success,error等值的情况
                result =  func(JSON.parse(returnJson));
            }
        },
        success:function(data) {
            result = func(data);
        }
    });
    return result;
},

/**
 *
 * @param url
 * @param params
 * @param func
 */
httpClient.delete = function(url , params , func){
    var result = null ;
    $.ajax({
        url: url,
        data: params ,
        type:"DELETE",
        beforeSend:function(){
            //index = hpc.load();
        },
        complete: function (XMLHttpRequest,status) {
            if(status=='timeout'){//超时,status还有success,error等值的情况
                result =  func(JSON.parse(returnJson));
            }
        },
        success:function(data) {
            result = func(data);
        }
    });
    return result;
}







